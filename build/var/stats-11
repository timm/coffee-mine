#!/usr/bin/env coffee
# Copyright (c) 2011,2012 Tim Menzies, MIT License
# 
#   ####    #####    ##     #####   ####
#  #          #     #  #      #    #
#   ####      #    #    #     #     ####
#       #     #    ######     #         #
#  #    #     #    #    #     #    #    #
#   ####      #    #    #     #     ####
# 
# Version ....... : stats-11
# Built ......... : Tue Dec 20 23:38:14 EST 2011
# License ....... : see below.
# Installation .. : see below.
# Report bugs ... : https://github.com/timm/coffee-mine/issues
# For doco ...... : read http://coffee-mine.blogspot.com around Tue Dec 20 23:38:14 EST 2011
 
#--| lib/globals.cof |-------------------------------------------------------------
 
pow  = Math.pow
e    = Math.e
pi   = Math.PI
sqrt = Math.sqrt
show = console.log

inf  = 1e+32
ninf = -1 * inf

 
#--| lib/getline.cof |-------------------------------------------------------------
 
fs = require "fs"

errorWrapper = (action) ->
  (err, args...) ->
    if err then throw err
    action args...

ifFileExists = (filename, action) ->
   fs.stat filename, errorWrapper (stat) ->
     if stat.isFile() then action()

getFileAsLines = (filename, action) ->
   ifFileExists filename, ->
     fs.readFile filename, "utf8",
       errorWrapper (content) ->
         action content.split "\n"
 
#--| lib/stats.cof |-------------------------------------------------------------
 
# This code courtesy of Martin Wawrusch 
# from CoffeeScript at GoogleGroups 
# (see http://goo.gl/kCMQ5).

class normal 
  constructor:(l) ->
      @max = -1000000000
      @min = 1000000000
      @n   = 0
      @sum = 0
      @sumSq = 0
      @adds(l) if l

  adds:(l) => 
      @add x for x in l              
  
  add:(x) => 
      @n     = @n + 1
      @sum   = @sum + x
      @sumSq = @sumSq + x*x
      @min   = x if x < @min
      @max   = x if x > @max
      @_mean = @_stdev = null
      x
  mean:() =>
      @_mean or= @sum/@n 
  stdev:() => 
      @_stdev or= sqrt((@sumSq-((@sum*@sum)/@n))/(@n-1))
  p:(x) =>
      s = @stdev()
      1/sqrt(2*pi*s*s) * \
         (pow e, -1*((x-@mean())^2/(2*s*s)))

class bins
  constructor:(l) ->
      @n   = 0
      @all = {}
      @adds(l) if l

  adds:(l) => 
      @add x for x in l              

  add:(x) => 
      @n     = @n + 1
      @all[x]   = (@all[x] ? 0) + 1 
      x

  p:(x) =>
      (@all[x] ? 0)/@n
 
#--| stats.cof |-------------------------------------------------------------
 

n = new normal [20,21,22,23,24]

show "stdev: #{n.stdev()} mean: #{n.mean()} p at 22: #{n.p(22)} "

b = new bins 'ape ape cat dog ape'.split /\s+/

show "b " + b.p('ape') 
# CREDITS
# -------
#
# Tim Menzies tim@menzies.us
#
# INSTALL
# -------
# 0)  Essential first step: make yourself a cup of coffee.
# 1)  Install coffee on your local machine.
#
# 2)  Download this file and call it, say,  'lib/globals.cof'.
#     2a) Optional (UNIX systems only)
#
#        chmod +x lib/globals.cof  # <=== On UNIX systems
# 
# 3)  Look for 'data/' in this file. Usually, its the last few
#     lines of code (above). If you see any reference to such 
#     a data file, then...
#     3a) Download those data files from
#         http://now.unbox.org/all/trunk/doc/coffee-mine/data
#     3b) Edit this file so it points to those data files.
#
# 4)  See if this file runs:
# 
#         ./lib/globals.cof         # <=== UNIX systems
#         coffee lib/globals.cof    # <=== for other systems
# 
# To check if it is running correctly, see 
# http://coffee-mine.blogspot.com (look for blogs entries 
# around lib/stats.cof).

# COPYRIGHT
# ---------
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
